package net.vs49688.rafview.gui;

import java.awt.event.*;
import java.awt.image.*;
import java.io.*;
import java.nio.ByteBuffer;
import javax.swing.*;
import java.util.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import net.vs49688.rafview.dds.*;

public class DDSViewer extends JPanel {

	private final ArrayList<BufferedImage> m_Mipmaps;
	
	public DDSViewer(ActionListener listener) {
		m_Mipmaps = new ArrayList<>();
		initComponents();

		m_LoadExternalBtn.addActionListener(listener);
		m_MipmapSpinner.setValue(1);
		m_MipmapSpinner.setEnabled(false);
		m_MipmapSpinner.addChangeListener(new MipmapChangeListener());

		setDDS("", null);
	}

	public final synchronized void setDDS(String name, byte[] dds) {
		if(dds == null) {
			m_NameLabel.setText("");
			return;
		}
		
		m_NameLabel.setText(name);
		
		try {
			/* Read the DDS image */
			DDSImage ddsImage = DDSImage.read(ByteBuffer.wrap(dds));
			
			m_Mipmaps.clear();
			m_Mipmaps.ensureCapacity(ddsImage.getNumMipMaps());

			/* Convert them to Swing images */
			for(final DDSImage.ImageInfo image : ddsImage.getAllMipMaps()) {
				m_Mipmaps.add(DDSUtils.getSwingImage(ddsImage, image));
			}

			// POTBUG: Check if no images???
		
			m_MipmapSpinner.setModel(new SpinnerNumberModel(1, 1, m_Mipmaps.size(), 1));
			_switchImage(0);

		} catch(IOException e) {
			/* We're reading from a byte[], so an IOException
			 * doesn't really make sense here. */
			e.printStackTrace(System.err);
		}
	}
	
	private void _switchImage(int index) {
		m_MipmapSpinner.setEnabled(true);
		m_ImagePanel.setImage(m_Mipmaps.get(index));
	}
	
	private class MipmapChangeListener implements ChangeListener {

		@Override
		public void stateChanged(ChangeEvent e) {
			_switchImage((int)m_MipmapSpinner.getValue() - 1);
		}
		
	};
	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.ButtonGroup treatGroup = new javax.swing.ButtonGroup();
        m_LoadExternalBtn = new javax.swing.JButton();
        m_NameLabel = new javax.swing.JLabel();
        m_ImagePanel = new net.vs49688.rafview.gui.NavigableImagePanel();
        m_MipmapSpinner = new javax.swing.JSpinner();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();

        m_LoadExternalBtn.setText("Load External File");
        m_LoadExternalBtn.setActionCommand("dds->loadexternal");

        m_NameLabel.setText("<NAME GOES HERE>");

        javax.swing.GroupLayout m_ImagePanelLayout = new javax.swing.GroupLayout(m_ImagePanel);
        m_ImagePanel.setLayout(m_ImagePanelLayout);
        m_ImagePanelLayout.setHorizontalGroup(
            m_ImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        m_ImagePanelLayout.setVerticalGroup(
            m_ImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 421, Short.MAX_VALUE)
        );

        jLabel1.setText("Mipmap Level:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(m_ImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(m_NameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m_MipmapSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m_LoadExternalBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(m_ImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_LoadExternalBtn)
                    .addComponent(m_NameLabel)
                    .addComponent(m_MipmapSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private net.vs49688.rafview.gui.NavigableImagePanel m_ImagePanel;
    private javax.swing.JButton m_LoadExternalBtn;
    private javax.swing.JSpinner m_MipmapSpinner;
    private javax.swing.JLabel m_NameLabel;
    // End of variables declaration//GEN-END:variables
}
